<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wabi Sabi</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://benja.info/"/>
  <updated>2016-06-04T08:51:25.606Z</updated>
  <id>http://benja.info/</id>
  
  <author>
    <name>BenjaminXi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>产品元认知</title>
    <link href="http://benja.info/2016/06/04/%E4%BA%A7%E5%93%81%E5%85%83%E8%AE%A4%E7%9F%A5/"/>
    <id>http://benja.info/2016/06/04/产品元认知/</id>
    <published>2016-06-04T08:38:59.000Z</published>
    <updated>2016-06-04T08:51:25.606Z</updated>
    
    <content type="html">&lt;p&gt;题外话  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;这周花6.5个小时看完了启示录，对产品经理有了模糊的认识。刚开始接触这本书，是本着了解产品经理的需求，再加上很多伟大的产品经理的光环。回想过往，那些产品经理的发布会总是让人兴奋，产品的魅力不止其本身，是产品经理为其注入灵魂，定义产品。这本书讲的就是定义产品之路上要面对的人和事。&lt;/p&gt;
&lt;p&gt;产品三板斧&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;这本书给我的，是框架式的认知。从人员、流程和产品三个部分，讲述了产品团队、产品开发和产品特征。在人员这部分，带给我的是颠覆性的认识，产品管理不是产品营销，产品管理也不是项目管理。此外，产品团队中产品管理与产品设计、软件开发是怎样的关系也很重要。其实，人员这一部分，概括为一点，是产品经理要与团队中的其他角色的分工，要求的是产品经理的团队合作能力。&lt;/p&gt;
&lt;p&gt;这本书给我的，是框架式的认知。从人员、流程和产品三个部分，讲述了产品团队、产品开发和产品特征。在人员这部分，带给我的是颠覆性的认识，产品管理不是产品营销，产品管理也不是项目管理。此外，产品团队中产品管理与产品设计、软件开发是怎样的关系也很重要。其实，人员这一部分，概括为一点，是产品经理要与团队中的其他角色的分工，要求的是产品经理的团队合作能力。&lt;/p&gt;
&lt;p&gt;在流程这部分，讲的产品开发的流程。软件开发有两个阶段：定义产品和开发产品。第一阶段探索产品，第二个阶段强调执行。定义产品阶段，包含三步，第一步评估产品机会，这一步只讨论待解决的问题，不涉及具体解决方案。要讨论的问题有产品的价值、目标市场、竞争优势、营销策略等等。第二步就是定义产品，这一步涉及找出解决方案，与用户体验设计师制作产品原型。第三步就是验证产品，包括通过真实用户验证产品的价值和可用性，和开发人员验证产品的可行性。产品经理负责的定义产品阶段已经完成，剩下的就是交给开发团队按照最终的产品原型开发产品，项目管理则负责开发阶段的计划和执行。&lt;/p&gt;
&lt;p&gt;在产品这部分，讲的是产品的吸引力法则。优秀的产品都是一样的，都是有共性的。苹果作为近三十年最优秀的科技产品，有很多值得学习的经验，我把她总结为四层服务模型，从底层到顶层依次为硬件、软件、用户体验和情感。具体来说，底层为上一层服务，最终的目的是满足用户的情感需求。要想抓住用户的情感需求，就得关注那些情感需求最强烈的消费者。非理性消费者作为大众群体中情绪最强烈的群体，当孤独、愤怒的情绪放大后，会导致非理性的消费行为。从马斯洛需求层次分析理论来讲，越是能抓住底层的需求，越是能创造出有吸引力的产品。满足情感需求讲的是产品的价值，除此之外，产品的有用性体现在用户体验设计上。好的用户体验是既实用，又美观，这就需要好的交互设计和视觉设计。&lt;/p&gt;
&lt;p&gt;产品之路，才刚刚开始。想要的越多，得到的越少。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      启示录读后感
    
    </summary>
    
      <category term="产品" scheme="http://benja.info/categories/%E4%BA%A7%E5%93%81/"/>
    
    
  </entry>
  
  <entry>
    <title>互联网协议浅析</title>
    <link href="http://benja.info/2016/06/01/%E4%BA%92%E8%81%94%E7%BD%91%E5%8D%8F%E8%AE%AE%E6%B5%85%E6%9E%90/"/>
    <id>http://benja.info/2016/06/01/互联网协议浅析/</id>
    <published>2016-05-31T16:00:00.000Z</published>
    <updated>2016-06-01T13:48:17.517Z</updated>
    
    <content type="html">&lt;p&gt;学通信已有5年有余，计算机网络虽在大三为应付考试，理解并不深。当初也是为了学好这门功课，硬是在亚洲最长的图书馆里啃着一本巨厚的《TCP/IP协议族》。&lt;/p&gt;
&lt;p&gt;最近搞出了一个博客benja.info，欣喜有余，总是不由自主地在地址栏敲入这几个英文字母，看看会发生什么神奇的事情。虽早已知道会发生什么，但当她弹出的那一刻，还是会欣喜不已。&lt;/p&gt;
&lt;p&gt;时间过滤后的才是精华，这句话用在此处也很恰当。当初厚厚的计算机网络，现在想起来的也就是OSI参考模型和5层网络协议这组关键词能留在记忆中。那不妨顺着这个框架走下去，聊聊今天的理解。&lt;/p&gt;
&lt;p&gt;互联网的5层模型，从底层到高层分别为物理层，数据链路层，网络层，传输层和应用层。那么我们不禁要问，为什么是5层，而不是6层、7层？这5层都是干什么的，可以拿掉一个么？&lt;/p&gt;
&lt;p&gt;带着这些问题，我们从最简单的点到点模型开始浅析。一台电脑要与另一台电脑通信，我们可以用一根网线来连接，也可以通过无线来连接，这种有发送方和接收方是一对一的，就是物理层要实现的功能，只管发送0和1的比特信号。&lt;/p&gt;
&lt;p&gt;如果有三台电脑要相互通信，单纯利用网线已经无法实现，就得考虑如何将比特信号发送给指定电脑，那么就需要写入接收方的地址。每台主机都有一个网卡，网卡的MAC地址就是唯一定义的地址，是固定不变的。那好了，有了MAC地址，我们就可以发送数据包了，我们习惯在数据报的头部插入地址，尾部插入数据。有了MAC地址，如何发送给接受者呢？采用广播的方法给子网内部的所有主机发送，主机通过比较来判断是否接受。这就是数据链路层。&lt;/p&gt;
&lt;p&gt;当电脑的数量越来越多，这种广播的方式就有点低效和浪费网络资源了。电脑就开始形成各个小的网络，成为子网，而MAC地址本身不可更改的特性造就了其局限性，发明了网络地址来定义主机，也就是IP地址。IP地址有两部分组成，前面代表子网号，后面代表主机号。IP协议的一个作用就是为计算机分配IP地址，另一个作用就是确定IP地址归属与哪个子网。后者依赖于另一参数，叫做子网掩码。只有当两个IP地址与子网掩码进行与运算后，结果相同才属于一个子网。那么，当一台电脑要与另一台电脑通信时，知道IP地址是不够的，还需要知道MAC地址，怎么由IP地址得到MAC地址呢？当一个子网内部时，使用ARP协议（地址解析协议）；当不在一个子网中，让网关去处理。这就是网络层。&lt;/p&gt;
&lt;p&gt;当一台电脑能够连接到另一台电脑时，我们就要考虑程序间是如何通信的。计算机都是多进程处理，一边聊QQ，一边浏览网页，如何确保接收到的数据包是给QQ呢，还是Chrome呢？这是我们就需要一个参数来定义进程间的通信，就是端口号。一种通信方式是把端口号放入数据报中，就可以进行传输，这种不可靠的传输成为UDP协议传输。还有一种为协议引入了确认机制，就是著名的三次握手协议，TCP协议，其实就是有确认机制的UDP。这就是传输层。&lt;/p&gt;
&lt;p&gt;当应用程序能够通过传输协议收到数据包，就可以解读了。但是数据格式各种各种，就需要一套规范，不同的应用程序就有不同的数据规范，这就是应用层。比如Email，WWW等。&lt;/p&gt;
&lt;p&gt;举例来说，当我们要访问benja.info时，地址栏敲入http：//benja.info，这种格式为URL格式，前面的http协议是超文本传送协议，后面的benja.info为域名地址。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;浏览器会分析URL链接，向DNS服务器请求解析benja.info的域名，这里的DNS服务器是DNSPod。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DNSPod会返回一个IP地址，这个地址github pages，我么在这上面架设了仓库，存放博客程序。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;浏览器与服务器建立TCP连接。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;浏览器发出请求显示页面的命令。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;github pages服务器给出响应，把html文件发送给浏览器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;释放TCP连接。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;浏览器显示html文本。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      看了阮一峰的互联网协议入门，分别从系统和用户的角度解读了互联网中的两台主机是如何通信的，简单易懂，有感而发。
    
    </summary>
    
      <category term="网络" scheme="http://benja.info/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
  </entry>
  
</feed>
